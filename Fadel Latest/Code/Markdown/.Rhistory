library(quantmod)
getSymbols("III")
View(III)
getSymbols("BP")
View(BP)
getSymbols("RR")
getSymbols("RDSA")
getSymbols("LON:RDSA")
getSymbols("LON:RDSA", src="google")
getSymbols("LON:RDSA", src="yahoo")
getSymbols("III", from = "1950-01-01")
View(III)
getSymbols("AAPL", from = "1950-01-01")
View(AAPL)
getSymbols("RR.L", from = "1950-01-01", to= Sys.Date())
View(RR.L)
knitr::opts_chunk$set(echo = TRUE,
cache = TRUE,
out.width = "100%",
warning = FALSE,
message = FALSE)
nyse_sample <- read.csv("../Data/Raw/nyse-companylist.csv") %>% sample_frac(0.1)
library(pacman) # needs to be installed first
# p_load is equivalent to combining both install.packages() and library()
p_load(tidyquant, tidyverse, RColorBrewer,
dataPreparation, DataExplorer, naniar, plotly,
tools, DT, formattable)
nyse_sample <- read.csv("../Data/Raw/nyse-companylist.csv") %>% sample_frac(0.1)
View(nyse_sample)
getSymbols("PMT^A")
nyse_sample <- read.csv("../Data/Raw/nyse-companylist.csv") %>%
filter(!str_detect(Symbol, '^')) %>%
sample_frac(size=150)
View(nyse_sample)
nyse_sample <- read.csv("../Data/Raw/nyse-companylist.csv") %>%
filter(!str_detect(Symbol, '^')) %>%
sample_frac(size=150)
colnames(nyse_sample)[1]
nyse_sample <- read.csv("../Data/Raw/nyse-companylist.csv") %>%
filter(!grepl('^', Symbol)) %>%
sample_frac(size=0.1)
nyse_sample <- read.csv("../Data/Raw/nyse-companylist.csv")
nyse_sample <- read.csv("../Data/Raw/nyse-companylist.csv") %>%
filter(!grepl('[^]', Symbol)) %>%
sample_frac(size=150)
View(nyse_sample)
nyse_sample <- read.csv("../Data/Raw/nyse-companylist.csv") %>%
filter(!grepl('[^]', Symbol))
nyse_sample <- read.csv("../Data/Raw/nyse-companylist.csv") %>%
filter(!grepl('^', Symbol))
nyse_sample <- read.csv("../Data/Raw/nyse-companylist.csv") %>%
filter(!grepl("\\Q^\\E", Symbol))
?tq_get()
nyse_sample <- read.csv("../Data/Raw/nyse-companylist.csv") %>%
filter(!grepl("\\Q^\\E", Symbol)) %>%
sample_frac(size=150) %>%
subset(select=c(1))
nyse_sample <- read.csv("../Data/Raw/nyse-companylist.csv") %>%
filter(!grepl("\\Q^\\E", Symbol)) %>%
sample_frac(size=0.02) %>%
subset(select=c(1))
nyse_sample <- read.csv("../Data/Raw/nyse-companylist.csv") %>%
filter(!grepl("\\Q^\\E", Symbol)) %>%
sample_frac(size=0.05) %>%
subset(select=c(1))
nyse_sample <- read.csv("../Data/Raw/nyse-companylist.csv") %>%
filter(!grepl("\\Q^\\E", Symbol)) %>%
sample_frac(size=0.055) %>%
subset(select=c(1))
nyse_sample <- read.csv("../Data/Raw/nyse-companylist.csv") %>%
filter(!grepl("\\Q^\\E", Symbol)) %>%
sample_frac(size=0.058) %>%
subset(select=c(1))
nyse_sample <- read.csv("../Data/Raw/nyse-companylist.csv") %>%
filter(!grepl("\\Q^\\E", Symbol)) %>%
sample_frac(size=0.057) %>%
subset(select=c(1))
nyse_sample <- read.csv("../Data/Raw/nyse-companylist.csv") %>%
filter(!grepl("\\Q^\\E", Symbol)) %>%
sample_frac(size=0.0565) %>%
subset(select=c(1)) # Just Keep the Symbols column
nyse_sample <- read.csv("../Data/Raw/nyse-companylist.csv") %>%
filter(!grepl("\\Q^\\E", Symbol)) %>%
sample_frac(size=0.05) %>%
subset(select=c(1)) %>%
as.vector()
nyse_sample <- read.csv("../Data/Raw/nyse-companylist.csv") %>%
filter(!grepl("\\Q^\\E", Symbol)) %>%
sample_frac(size=0.05) %>%
subset(select=c(1)) %>%
as.character()
nyse_sample <- read.csv("../Data/Raw/nyse-companylist.csv") %>%
filter(!grepl("\\Q^\\E", Symbol)) %>%
sample_frac(size=0.05) %>%
subset(select=c(1))
nyse_sample <- nyse_sample[["Symbols"]]
nyse_sample <- read.csv("../Data/Raw/nyse-companylist.csv") %>%
filter(!grepl("\\Q^\\E", Symbol)) %>%
sample_frac(size=0.05) %>%
subset(select=c(1))
View(nyse_sample)
nyse_sample <- nyse_sample[["Symbol"]]
nyse_sample <- read.csv("../Data/Raw/nyse-companylist.csv") %>%
filter(!grepl("\\Q^\\E", Symbol)) %>%
sample_frac(size=0.05) %>%
subset(select=c(1)) %>%
unlist() %>% as.character()
nyse_stocks <- tq_get(nyse_sample, get = "stock.prices",
from = "1990-01-01",
to = "2019-03-15")
nyse <- readRDS("J:/My Drive/Miami/Research/2019/Review Paper - Financial Time Series/Code/Data/RGenerated/nyse.RDS")
?DT()
unlink('financial_timeseries_approaches_cache', recursive = TRUE)
library(rvest)
data_url <- "https://en.wikipedia.org/wiki/FTSE_100_Index"
lse_sample <- read_html(data_url) %>%
html_node("#constituents") %>% html_table() %>%
filter(!grepl("\\Q^\\E", Symbol)) %>%
subset(select=c(2)) %>% unlist() %>% as.character()
lse_sample <- paste0(lse_sample,".L")
data_url <- "https://en.wikipedia.org/wiki/FTSE_100_Index"
lse_sample <- read_html(data_url) %>%
html_node("#constituents") %>% html_table() %>%
subset(select=c(2)) %>% unlist() %>% as.character()
lse_sample <- paste0(lse_sample,".L")
#mw-content-text > div > div:nth-child(21) > ul:nth-child(2) > li:nth-child(2) > a.external.text
read_html("https://en.wikipedia.org/wiki/Nikkei_225") %>% html_nodes("li") %>% html_text()
read_html("https://en.wikipedia.org/wiki/Nikkei_225") %>% html_nodes("#mw-content-text > div > div:nth-child(21) > ul:nth-child(2)") %>% html_text()
read_html("https://en.wikipedia.org/wiki/Nikkei_225") %>% html_nodes("#mw-content-text > div > div:nth-child(21)") %>% html_text()
tse_1 <- read_html("https://en.wikipedia.org/wiki/Nikkei_225") %>%
html_nodes("#mw-content-text > div > div:nth-child(21)") %>%
html_text() %>% str_extract_all(pattern = "[0-9]+")
View(tse_1)
tse_1 <- read_html("https://en.wikipedia.org/wiki/Nikkei_225") %>%
html_nodes("#mw-content-text > div > div:nth-child(21)") %>%
html_text() %>%
(pattern = "[0-9]+")[[1]]
tse_1 <- read_html("https://en.wikipedia.org/wiki/Nikkei_225") %>%
html_nodes("#mw-content-text > div > div:nth-child(21)") %>%
html_text() %>%
str_extract_all(pattern = "[0-9]+")[[1]]
tse_1 <- read_html("https://en.wikipedia.org/wiki/Nikkei_225") %>%
html_nodes("#mw-content-text > div > div:nth-child(21)") %>%
html_text() %>%
str_extract_all(pattern = "[0-9]+") %>% unlist()
tse_2 <- read_html("https://en.wikipedia.org/wiki/Nikkei_225") %>%
html_nodes("#mw-content-text > div > div:nth-child(22)") %>%
html_text() %>%
str_extract_all(pattern = "[0-9]+") %>% unlist()
a = rbind(tse_1,tse_2)
a = c(tse_1, tse_2)
unlink('financial_timeseries_approaches_cache', recursive = TRUE)
nyse_sample <- read.csv("../Data/Raw/nyse-companylist.csv") %>%
filter(!grepl("\\Q^\\E", Symbol))
nyse_sample <- sample(nyse_sample[,1],size=150, replace = FALSE) %>%
unlist() %>% as.character()
unlink('financial_timeseries_approaches_cache', recursive = TRUE)
# In this chunk, we will obtain the data 100 sybmols from the SSE.
# The code follows the same logic as the NYSE scrape (and the appending with ".SS" for names to extract the data from Yahoo Finance.
sse_sample <- read.csv("../Data/Raw/sse-companylist.csv")
sse_sample <- sample(sse_sample[,1],size=100, replace = FALSE) %>%
unlist() %>% as.character()
sse_sample <- paste0(sse_sample, ".SS")
sse_stocks <- tq_get(sse_sample, get = "stock.prices",
from = "1990-01-01",
to = "2019-03-15")
saveRDS(sse_stocks,
file = "../Data/RGenerated/sse.RDS")
cat(paste("Based on our code, we have extracted the data for", length(sse_sample), "SSE stocks. The data was saved to an RDS file titled", "sse.RDS, which contained", ncol(sse_stocks), "variables/columns and", nrow(sse_stocks), "observations. The RDS file can be accessed from our GitHub: Data -> RGenerated -> sse.RDS."))
a <- readRDS(../Data/RGenerated/sse.RDS)
a <- readRDS("../Data/RGenerated/sse.RDS")
unlink('financial_timeseries_approaches_cache', recursive = TRUE)
cm_indices <- c("BCO/USD", "XCU/USD","CORN/USD", "NATGAS/USD",
"SOYBN/USD", "SUGAR/USD", "WTICO/USD", "WHEAT/USD",
"XAU/USD", "XAG/USD", "XPD/USD", "XPT/USD")
cm_prices <- tq_get(cm_indices, get = "metal.prices",
from = "1990-01-01",
to = "2019-03-15")
cm_prices <- tq_get(cm_indices, get = "stock.prices",
from = "1990-01-01",
to = "2019-03-15")
cmf_indices <- c("BCO/USD", "XCU/USD","CORN/USD", "NATGAS/USD",
"SOYBN/USD", "SUGAR/USD", "WTICO/USD", "WHEAT/USD",
"XAU/USD", "XAG/USD", "XPD/USD", "XPT/USD",
"USD/CAD", "USD/CHF", "USD/CNH", "USD/CZK",
"USD/DKK", "USD/HKD", "USD/HUF", "USD/INR",
"USD/JPY", "USD/MXN", "USD/NOK", "USD/PLN",
"USD/SAR", "USD/SEK", "USD/SGD", "USD/THB",
"USD/TRY", "USD/ZAR", "EUR/GBP", "EUR/USD")
cmf_prices <- tq_get(cmf_indices, get = "exchange.rates",
from = "1990-01-01",
to = "2019-03-15")
coin_table <-  read_html("https://coinmarketcap.com/") %>%
html_node("#currencies") %>% html_table()
View(coin_table)
subset(coin_table, select = c("Circulating Supply")) %>% head()
subset(coin_table, select = c("Circulating Supply")) %>%
str_extract_all(pattern = "[[:upper]]") %>% head()
subset(coin_table, select = c("Circulating Supply")) %>%
unlist() %>% as.character() %>%
str_extract_all(pattern = "[[:upper]]")
subset(coin_table, select = c("Circulating Supply")) %>%
unlist() %>%
str_extract_all(pattern = "[[:upper]]")
subset(coin_table, select = c("Circulating Supply")) %>%
unlist()
subset(coin_table, select = c("Circulating Supply")) %>%
as.character() %>%
str_extract_all(pattern = "[[:upper]]")
subset(coin_table, select = c("Circulating Supply")) %>%
as.character() %>%
str_extract_all(pattern = "[A-Z
]""
subset(coin_table, select = c("Circulating Supply")) %>%
str_extract_all(pattern = "[A-Z]")
class(subset(coin_table, select = c("Circulating Supply")))
class(subset(coin_table, select = c("Circulating Supply")) %>% unlist() %>% as.character())
subset(coin_table, select = c("Circulating Supply")) %>%
unlist() %>% as.character() %>%  str_extract_all(pattern = "[A-Z]")
subset(coin_table, select = c("Circulating Supply")) %>%
unlist() %>% as.character() %>%  str_extract(pattern = "[A-Z]")
subset(coin_table, select = c("Circulating Supply")) %>%
unlist() %>% as.character() %>%  str_extract_all(pattern = "[A-Z]") %>% cbind()
subset(coin_table, select = c("Circulating Supply")) %>%
unlist() %>% as.character() %>%  str_extract_all(pattern = "[A-Z]") %>%
linearizeMlist()
subset(coin_table, select = c("Circulating Supply")) %>%
unlist() %>% as.character() %>%  str_extract_all(pattern = "[A-Z]") %>%
sapply(paste, collapse="")
unix.time(as.POSIXct("2018-03-15 23:00", tz="GMT"))
system.time(as.POSIXct("2018-03-15 23:00", tz="GMT"))
first.Ts.time <- as.numeric(as.POSIXct("2016-01-01 0:00", tz="GMT")) +
(3600*2000)
install.packages("readxl")
library(readxl)
?read_excel
macro_indicators <- read_excel(path = "../Data/Raw/finindicators.xls") %>%
colnames() %>% subset(select=-c(1)) %>% unlist() %>% as.character()
macro_indicators <- read_excel(path = "../Data/Raw/finindicators.xls") %>%
colnames()
class(macro_indicators)
macro_indicators[1]
macro_indicators[2]
macro_indicators <- read_xls(path = "../Data/Raw/finindicators.xls",
sheet = "Monthly") %>%
colnames() %>% subset(select=-c(1)) %>% unlist() %>% as.character()
macro_indicators <- read_xls(path = "../Data/Raw/finindicators.xls",
sheet = "Monthly") %>%
colnames()
install.packages("purrr")
macro_indicators <- read_xls(path = "../Data/Raw/finindicators.xls",
sheet = "Monthly") %>%
colnames() %>% purrr::pluck(-1)
macro_indicators <- read_xls(path = "../Data/Raw/finindicators.xls",
sheet = "Monthly") %>%
colnames() %>% purrr::pluck(seq(2,81,1))
macro_indicators <- read_xls(path = "../Data/Raw/finindicators.xls",
sheet = "Monthly") %>% colnames()
macro_indicators[1] <- NULL # Dropping the first element which is Date
macro_indicators <- macro_indicators[-1]
